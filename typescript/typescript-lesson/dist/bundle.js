(()=>{"use strict";class e{constructor(){}get totalScore(){return n.getInstance().activeElementsScore.reduce(((e,t)=>e+t),0)}render(){document.querySelector(".score__number").textContent=String(this.totalScore)}static getInstance(){return e.instance||(e.instance=new e),e.instance}}class t{constructor(e){this.element=e,e.addEventListener("click",this.clickEventHandler.bind(this))}clickEventHandler(){this.element.classList.toggle("food--active"),e.getInstance().render()}}class n{constructor(){this.elements=document.querySelectorAll(".food"),this._activeElements=[],this._activeElementsScore=[],this.elements.forEach((e=>{new t(e)}))}get activeElements(){return this._activeElements=[],this.elements.forEach((e=>{e.classList.contains("food--active")&&this._activeElements.push(e)})),this._activeElements}get activeElementsScore(){return this._activeElementsScore=[],this.activeElements.forEach((e=>{const t=e.querySelector(".food__score");t&&this._activeElementsScore.push(Number(t.textContent))})),this._activeElementsScore}static getInstance(){return n.instance||(n.instance=new n),n.instance}}n.getInstance()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90eXBlc2NyaXB0LWxlc3Nvbi8uL2Zvb2QtYXBwL3Njb3JlLnRzIiwid2VicGFjazovL3R5cGVzY3JpcHQtbGVzc29uLy4vZm9vZC1hcHAvZm9vZC50cyIsIndlYnBhY2s6Ly90eXBlc2NyaXB0LWxlc3Nvbi8uL2Zvb2QtYXBwL2Zvb2RzLnRzIiwid2VicGFjazovL3R5cGVzY3JpcHQtbGVzc29uLy4vZm9vZC1hcHAvbWFpbi50cyJdLCJuYW1lcyI6WyJTY29yZSIsIkZvb2RzIiwiZ2V0SW5zdGFuY2UiLCJhY3RpdmVFbGVtZW50c1Njb3JlIiwicmVkdWNlIiwidG90YWwiLCJzY29yZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInRleHRDb250ZW50IiwiU3RyaW5nIiwidGhpcyIsInRvdGFsU2NvcmUiLCJpbnN0YW5jZSIsIkZvb2QiLCJlbGVtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImNsaWNrRXZlbnRIYW5kbGVyIiwiYmluZCIsImNsYXNzTGlzdCIsInRvZ2dsZSIsInJlbmRlciIsImVsZW1lbnRzIiwicXVlcnlTZWxlY3RvckFsbCIsIl9hY3RpdmVFbGVtZW50cyIsIl9hY3RpdmVFbGVtZW50c1Njb3JlIiwiZm9yRWFjaCIsImNvbnRhaW5zIiwicHVzaCIsImFjdGl2ZUVsZW1lbnRzIiwiZm9vZFNjb3JlIiwiTnVtYmVyIl0sIm1hcHBpbmdzIjoibUJBQ08sTUFBTUEsRUFDVCxlQUNBLGlCQUVJLE9BRGNDLEVBQU1DLGNBQ1BDLG9CQUFvQkMsUUFBTyxDQUFDQyxFQUFPQyxJQUFVRCxFQUFRQyxHQUFPLEdBRTdFLFNBQ0lDLFNBQVNDLGNBQWMsa0JBQWtCQyxZQUFjQyxPQUFPQyxLQUFLQyxZQUV2RSxxQkFJSSxPQUhLWixFQUFNYSxXQUNQYixFQUFNYSxTQUFXLElBQUliLEdBRWxCQSxFQUFNYSxVQ2JkLE1BQU1DLEVBQ1QsWUFBWUMsR0FDUkosS0FBS0ksUUFBVUEsRUFDZkEsRUFBUUMsaUJBQWlCLFFBQVNMLEtBQUtNLGtCQUFrQkMsS0FBS1AsT0FFbEUsb0JBQ0lBLEtBQUtJLFFBQVFJLFVBQVVDLE9BQU8sZ0JBQ2hCcEIsRUFBTUUsY0FDZG1CLFVDUlAsTUFBTXBCLEVBQ1QsY0FDSVUsS0FBS1csU0FBV2YsU0FBU2dCLGlCQUFpQixTQUMxQ1osS0FBS2EsZ0JBQWtCLEdBQ3ZCYixLQUFLYyxxQkFBdUIsR0FDNUJkLEtBQUtXLFNBQVNJLFNBQVFYLElBQ2xCLElBQUlELEVBQUtDLE1BR2pCLHFCQU9JLE9BTkFKLEtBQUthLGdCQUFrQixHQUN2QmIsS0FBS1csU0FBU0ksU0FBUVgsSUFDZEEsRUFBUUksVUFBVVEsU0FBUyxpQkFDM0JoQixLQUFLYSxnQkFBZ0JJLEtBQUtiLE1BRzNCSixLQUFLYSxnQkFFaEIsMEJBUUksT0FQQWIsS0FBS2MscUJBQXVCLEdBQzVCZCxLQUFLa0IsZUFBZUgsU0FBUVgsSUFDeEIsTUFBTWUsRUFBWWYsRUFBUVAsY0FBYyxnQkFDcENzQixHQUNBbkIsS0FBS2MscUJBQXFCRyxLQUFLRyxPQUFPRCxFQUFVckIsaUJBR2pERSxLQUFLYyxxQkFFaEIscUJBSUksT0FIS3hCLEVBQU1ZLFdBQ1BaLEVBQU1ZLFNBQVcsSUFBSVosR0FFbEJBLEVBQU1ZLFVDaENyQlosRUFBTUMsZSIsImZpbGUiOiJidW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGb29kcyB9IGZyb20gXCIuL2Zvb2RzXCI7XG5leHBvcnQgY2xhc3MgU2NvcmUge1xuICAgIGNvbnN0cnVjdG9yKCkgeyB9XG4gICAgZ2V0IHRvdGFsU2NvcmUoKSB7XG4gICAgICAgIGNvbnN0IGZvb2RzID0gRm9vZHMuZ2V0SW5zdGFuY2UoKTtcbiAgICAgICAgcmV0dXJuIGZvb2RzLmFjdGl2ZUVsZW1lbnRzU2NvcmUucmVkdWNlKCh0b3RhbCwgc2NvcmUpID0+IHRvdGFsICsgc2NvcmUsIDApO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zY29yZV9fbnVtYmVyJykudGV4dENvbnRlbnQgPSBTdHJpbmcodGhpcy50b3RhbFNjb3JlKTtcbiAgICB9XG4gICAgc3RhdGljIGdldEluc3RhbmNlKCkge1xuICAgICAgICBpZiAoIVNjb3JlLmluc3RhbmNlKSB7XG4gICAgICAgICAgICBTY29yZS5pbnN0YW5jZSA9IG5ldyBTY29yZSgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBTY29yZS5pbnN0YW5jZTtcbiAgICB9XG59XG4iLCJpbXBvcnQgeyBTY29yZSB9IGZyb20gXCIuL3Njb3JlXCI7XG5leHBvcnQgY2xhc3MgRm9vZCB7XG4gICAgY29uc3RydWN0b3IoZWxlbWVudCkge1xuICAgICAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xuICAgICAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5jbGlja0V2ZW50SGFuZGxlci5iaW5kKHRoaXMpKTtcbiAgICB9XG4gICAgY2xpY2tFdmVudEhhbmRsZXIoKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QudG9nZ2xlKCdmb29kLS1hY3RpdmUnKTtcbiAgICAgICAgY29uc3Qgc2NvcmUgPSBTY29yZS5nZXRJbnN0YW5jZSgpO1xuICAgICAgICBzY29yZS5yZW5kZXIoKTtcbiAgICB9XG59XG4iLCJpbXBvcnQgeyBGb29kIH0gZnJvbSBcIi4vZm9vZFwiO1xuZXhwb3J0IGNsYXNzIEZvb2RzIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5mb29kJyk7XG4gICAgICAgIHRoaXMuX2FjdGl2ZUVsZW1lbnRzID0gW107XG4gICAgICAgIHRoaXMuX2FjdGl2ZUVsZW1lbnRzU2NvcmUgPSBbXTtcbiAgICAgICAgdGhpcy5lbGVtZW50cy5mb3JFYWNoKGVsZW1lbnQgPT4ge1xuICAgICAgICAgICAgbmV3IEZvb2QoZWxlbWVudCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBnZXQgYWN0aXZlRWxlbWVudHMoKSB7XG4gICAgICAgIHRoaXMuX2FjdGl2ZUVsZW1lbnRzID0gW107XG4gICAgICAgIHRoaXMuZWxlbWVudHMuZm9yRWFjaChlbGVtZW50ID0+IHtcbiAgICAgICAgICAgIGlmIChlbGVtZW50LmNsYXNzTGlzdC5jb250YWlucygnZm9vZC0tYWN0aXZlJykpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9hY3RpdmVFbGVtZW50cy5wdXNoKGVsZW1lbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2FjdGl2ZUVsZW1lbnRzO1xuICAgIH1cbiAgICBnZXQgYWN0aXZlRWxlbWVudHNTY29yZSgpIHtcbiAgICAgICAgdGhpcy5fYWN0aXZlRWxlbWVudHNTY29yZSA9IFtdO1xuICAgICAgICB0aGlzLmFjdGl2ZUVsZW1lbnRzLmZvckVhY2goZWxlbWVudCA9PiB7XG4gICAgICAgICAgICBjb25zdCBmb29kU2NvcmUgPSBlbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5mb29kX19zY29yZScpO1xuICAgICAgICAgICAgaWYgKGZvb2RTY29yZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2FjdGl2ZUVsZW1lbnRzU2NvcmUucHVzaChOdW1iZXIoZm9vZFNjb3JlLnRleHRDb250ZW50KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdGhpcy5fYWN0aXZlRWxlbWVudHNTY29yZTtcbiAgICB9XG4gICAgc3RhdGljIGdldEluc3RhbmNlKCkge1xuICAgICAgICBpZiAoIUZvb2RzLmluc3RhbmNlKSB7XG4gICAgICAgICAgICBGb29kcy5pbnN0YW5jZSA9IG5ldyBGb29kcygpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBGb29kcy5pbnN0YW5jZTtcbiAgICB9XG59XG4iLCJpbXBvcnQgeyBGb29kcyB9IGZyb20gXCIuL2Zvb2RzXCI7XG5Gb29kcy5nZXRJbnN0YW5jZSgpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==